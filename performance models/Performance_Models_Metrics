{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Performance_Models_Metrics","version":"0.3.2","provenance":[{"file_id":"/v2/external/notebooks/welcome.ipynb","timestamp":1553675465016}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"colab_type":"text","id":"5fCEDCU_qrC0"},"source":["<img height=\"45px\" src=\"https://colab.research.google.com/img/colab_favicon.ico\" align=\"left\" hspace=\"10px\" vspace=\"0px\">\n","\n","<h1>Welcome to Colaboratory!</h1>\n","\n","Colaboratory is a free Jupyter notebook environment that requires no setup and runs entirely in the cloud.\n","\n","With Colaboratory you can write and execute code, save and share your analyses, and access powerful computing resources, all for free from your browser."]},{"cell_type":"code","metadata":{"id":"-FppELROOShx","colab_type":"code","outputId":"ef040bdd-eefd-43c7-f1be-0ff0b34c2103","executionInfo":{"status":"ok","timestamp":1562910147457,"user_tz":-330,"elapsed":1614,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LogisticRegression\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv\"\n","names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\n","dataframe = pandas.read_csv(url, names=names)\n","array = dataframe.values\n","X = array[:,0:8]\n","Y = array[:,8]\n","seed = 7\n","kfold = model_selection.KFold(n_splits=10, random_state=seed)\n","model = LogisticRegression()\n","scoring = 'accuracy'\n","results = model_selection.cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n","print(\"Classification Accuracy: %.3f (%.3f)\" % (results.mean(), results.std()))"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Classification Accuracy: 0.770 (0.048)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8QmbtqkWPoNO","colab_type":"code","outputId":"0678960a-db40-49ee-ff3a-6de9f7815e94","executionInfo":{"status":"ok","timestamp":1553698795378,"user_tz":-330,"elapsed":2761,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LogisticRegression\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv\"\n","names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\n","dataframe = pandas.read_csv(url, names=names)\n","array = dataframe.values\n","X = array[:,0:8]\n","Y = array[:,8]\n","seed = 7\n","kfold = model_selection.KFold(n_splits=10, random_state=seed)\n","model = LogisticRegression()\n","scoring = 'neg_log_loss'\n","results = model_selection.cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n","print(\"Logloss: %.3f (%.3f)\" % (results.mean(), results.std()))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Logloss: -0.493 (0.047)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"h5RjVBF4QIrf","colab_type":"code","outputId":"203e9f22-0dd2-4677-d66e-8aee2a6e6541","executionInfo":{"status":"ok","timestamp":1553699260832,"user_tz":-330,"elapsed":3108,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LogisticRegression\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv\"\n","names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\n","dataframe = pandas.read_csv(url, names=names)\n","array = dataframe.values\n","X = array[:,0:8]\n","Y = array[:,8]\n","seed = 7\n","kfold = model_selection.KFold(n_splits=10, random_state=seed)\n","model = LogisticRegression()\n","scoring = 'roc_auc'\n","results = model_selection.cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n","print(\"Area Under ROC Curve:AUC: %.3f (%.3f)\" % (results.mean(), results.std()))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Area Under ROC Curve:AUC: 0.824 (0.041)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YTdciPM6QWU_","colab_type":"code","outputId":"febd9678-5bf3-4da6-9136-803359598623","executionInfo":{"status":"ok","timestamp":1553699445765,"user_tz":-330,"elapsed":2738,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":72}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv\"\n","names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\n","dataframe = pandas.read_csv(url, names=names)\n","array = dataframe.values\n","X = array[:,0:8]\n","Y = array[:,8]\n","test_size = 0.33\n","seed = 7\n","X_train, X_test, Y_train, Y_test = model_selection.train_test_split(X, Y, test_size=test_size, random_state=seed)\n","model = LogisticRegression()\n","model.fit(X_train, Y_train)\n","predicted = model.predict(X_test)\n","matrix = confusion_matrix(Y_test, predicted)\n","print(\"Confusion Matrix:\")\n","print(matrix)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Confusion Matrix:\n","[[141  21]\n"," [ 41  51]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"CY3nKoSAQh7h","colab_type":"code","outputId":"e31dda52-f8ca-4515-bbc3-4c1e9c31962b","executionInfo":{"status":"ok","timestamp":1553699582081,"user_tz":-330,"elapsed":2576,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":199}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import classification_report\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv\"\n","names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\n","dataframe = pandas.read_csv(url, names=names)\n","array = dataframe.values\n","X = array[:,0:8]\n","Y = array[:,8]\n","test_size = 0.33\n","seed = 7\n","X_train, X_test, Y_train, Y_test = model_selection.train_test_split(X, Y, test_size=test_size, random_state=seed)\n","model = LogisticRegression()\n","model.fit(X_train, Y_train)\n","predicted = model.predict(X_test)\n","report = classification_report(Y_test, predicted)\n","print(\"Classification Report:\")\n","print(report)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","         0.0       0.77      0.87      0.82       162\n","         1.0       0.71      0.55      0.62        92\n","\n","   micro avg       0.76      0.76      0.76       254\n","   macro avg       0.74      0.71      0.72       254\n","weighted avg       0.75      0.76      0.75       254\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SAw3VnpSQqDQ","colab_type":"code","outputId":"0ee58023-cc0c-458a-daa4-c81f727e561d","executionInfo":{"status":"ok","timestamp":1553699692105,"user_tz":-330,"elapsed":2051,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LinearRegression\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/housing.data\"\n","names = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']\n","dataframe = pandas.read_csv(url, delim_whitespace=True, names=names)\n","array = dataframe.values\n","X = array[:,0:13]\n","Y = array[:,13]\n","seed = 7\n","kfold = model_selection.KFold(n_splits=10, random_state=seed)\n","model = LinearRegression()\n","scoring = 'neg_mean_absolute_error'\n","results = model_selection.cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n","print(\"Mean Absolute Error is:\")\n","print(\"MAE: %.3f (%.3f)\" % (results.mean(), results.std()))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Mean Absolute Error is:\n","MAE: -4.005 (2.084)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OtHRCU1OQ4GI","colab_type":"code","outputId":"5c400a28-a9ae-4321-c074-00e18cf95f25","executionInfo":{"status":"ok","timestamp":1553699759136,"user_tz":-330,"elapsed":1937,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LinearRegression\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/housing.data\"\n","names = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']\n","dataframe = pandas.read_csv(url, delim_whitespace=True, names=names)\n","array = dataframe.values\n","X = array[:,0:13]\n","Y = array[:,13]\n","seed = 7\n","kfold = model_selection.KFold(n_splits=10, random_state=seed)\n","model = LinearRegression()\n","scoring = 'neg_mean_squared_error'\n","results = model_selection.cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n","print(\"Mean Squared Error is\")\n","print(\"MSE: %.3f (%.3f)\" % (results.mean(), results.std()))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Mean Squared Error is\n","MSE: -34.705 (45.574)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"O76I4noaRBH5","colab_type":"code","outputId":"2700566e-16c1-48f7-bf58-86ecf6f27222","executionInfo":{"status":"ok","timestamp":1553699817486,"user_tz":-330,"elapsed":3128,"user":{"displayName":"Sreedhar Jinka","photoUrl":"","userId":"12664726167916538839"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["\n","\n","import pandas\n","from sklearn import model_selection\n","from sklearn.linear_model import LinearRegression\n","from warnings import simplefilter\n","simplefilter(action='ignore', category=FutureWarning)\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/housing.data\"\n","names = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']\n","dataframe = pandas.read_csv(url, delim_whitespace=True, names=names)\n","array = dataframe.values\n","X = array[:,0:13]\n","Y = array[:,13]\n","seed = 7\n","kfold = model_selection.KFold(n_splits=10, random_state=seed)\n","model = LinearRegression()\n","scoring = 'r2'\n","results = model_selection.cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n","print(\"R^2 Metric is:\")\n","print(\"R^2: %.3f (%.3f)\" % (results.mean(), results.std()))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["R^2 Metric is:\n","R^2: 0.203 (0.595)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"-Rh3-Vt9Nev9"},"source":["## More Resources\n","\n","Learn how to make the most of Python, Jupyter, Colaboratory, and related tools with these resources:\n","\n","### Working with Notebooks in Colaboratory\n","- [Overview of Colaboratory](/notebooks/basic_features_overview.ipynb)\n","- [Guide to Markdown](/notebooks/markdown_guide.ipynb)\n","- [Importing libraries and installing dependencies](/notebooks/snippets/importing_libraries.ipynb)\n","- [Saving and loading notebooks in GitHub](https://colab.research.google.com/github/googlecolab/colabtools/blob/master/notebooks/colab-github-demo.ipynb)\n","- [Interactive forms](/notebooks/forms.ipynb)\n","- [Interactive widgets](/notebooks/widgets.ipynb)\n","\n","### Working with Data\n","- [Loading data: Drive, Sheets, and Google Cloud Storage](/notebooks/io.ipynb) \n","- [Charts: visualizing data](/notebooks/charts.ipynb)\n","- [Getting started with BigQuery](/notebooks/bigquery.ipynb)\n","\n","### Machine Learning Crash Course\n","These are a few of the notebooks from Google's online Machine Learning course. See the [full course website](https://developers.google.com/machine-learning/crash-course/) for more.\n","- [Intro to Pandas](/notebooks/mlcc/intro_to_pandas.ipynb)\n","- [Tensorflow concepts](/notebooks/mlcc/tensorflow_programming_concepts.ipynb)\n","- [First steps with TensorFlow](/notebooks/mlcc/first_steps_with_tensor_flow.ipynb)\n","- [Intro to neural nets](/notebooks/mlcc/intro_to_neural_nets.ipynb)\n","- [Intro to sparse data and embeddings](/notebooks/mlcc/intro_to_sparse_data_and_embeddings.ipynb)\n","\n","### Using Accelerated Hardware\n","- [TensorFlow with GPUs](/notebooks/gpu.ipynb)\n","- [TensorFlow with TPUs](/notebooks/tpu.ipynb)"]}]}